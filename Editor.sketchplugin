// (ctrl shift e)

if([selection count] == 0)
{
   custom_log("No selection found")
   return
}

var target = selection[0]
var userInfo = [target userInfo]

if(userInfo == nil)
{
   userInfo = [NSMutableDictionary new]
}
else
{
   userInfo = [userInfo mutableCopy]
}

custom_log("Current userInfo: "+userInfo)

var viewClassString = userInfo["Sketch2Code.viewClass"]

if(viewClassString == nil)
{
  var viewMap = loadObjectMap()
  var targetClassName = NSStringFromClass([target class])
  var viewMapDescription = viewMap[targetClassName]

  if(viewMapDescription)
  {
    viewClassString = viewMap[targetClassName]["viewClass"] + ""
  }
  else
  {
    viewClassString = targetClassName
  }
}

var updatedViewClassString = doc.askForUserInput_initialValue("Override default UIKit class for " + [target name], viewClassString)

custom_log("New class: " + updatedViewClassString)

userInfo["Sketch2Code.viewClass"] = updatedViewClassString

target.userInfo = userInfo

//Should be common
function loadObjectMap()
{
    var path = pluginPath()

    path = [path stringByAppendingString:@"view.map"]

    custom_log("Loading map at:" + path)

    id map = loadJSON(path)

    custom_log("" + map)

    custom_log("Map loading [Done]")

    return map
}

function loadJSON(filePath)
{
  var errorPointer = MOPointer.alloc().initWithValue(nil)
  var data = [NSData dataWithContentsOfFile:filePath options:0 error:errorPointer]

  if(errorPointer.value())
  {
    custom_log("Error:" + errorPointer.value())
  }

  var json =  [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingAllowFragments error:errorPointer]

  if(errorPointer.value())
  {
    custom_log("Error:" + errorPointer.value())
  }

  return json
}


function pluginPath()
{
  var path = MSPluginManager.pluginsURL();

  path = [path absoluteString]
  path = [path stringByReplacingPercentEscapesUsingEncoding:NSUTF8StringEncoding]
  path = [path stringByReplacingOccurrencesOfString:@"file://" withString:@""]

  return path
}

function custom_log(string)
{
  log("SKETCH2CODE | " + string)
}
